AWSTemplateFormatVersion: '2010-09-09'
Description: CodePipeline for e-commerce backend

Parameters:
  GitHubRepo:
    Type: String
    Default: aws-project-backend
  GitHubOwner:
    Type: String
    Default: JhonatanBellaiza
  GitHubBranch:
    Type: String
    Default: main
  GitHubOAuthToken:
    Type: String
    NoEcho: true
    Description: GitHub OAuth token for CodePipeline
  EnvType:
    Type: String
    Description: Environment type (dev, staging, prod)
    AllowedValues: [dev, staging, prod]
    Default: dev
  LambdaDeploymentBucket:
    Type: String
    Description: S3 bucket for Lambda deployment packages

Resources:
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [codepipeline.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - s3:*
                  - cloudformation:*
                Resource: '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                  - s3:*
                  - cloudformation:*
                  - lambda:*
                  - iam:*
                Resource: '*'

  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub CloudFormationExecutionRole-${EnvType}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CloudFormationExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - lambda:*
                  - iam:PassRole
                  - cloudwatch:*
                  - logs:*
                  - apigateway:*
                  - cloudformation:*
                Resource: "*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ecommerce-backend-build-${EnvType}
      Description: Build project for e-commerce backend
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: ENV
            Value: !Ref EnvType
            Type: PLAINTEXT
          - Name: LAMBDA_DEPLOYMENT_BUCKET
            Value: !Ref LambdaDeploymentBucket
            Type: PLAINTEXT

  BackendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ecommerce-backend-pipeline-${EnvType}
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref LambdaDeploymentBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: [CAPABILITY_AUTO_EXPAND, CAPABILITY_NAMED_IAM, CAPABILITY_IAM]
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ecommerce-${EnvType}
                TemplatePath: BuildOutput::output_templates/backend-packaged.yml
                ParameterOverrides: |
                  {
                    "EnvType": "dev",
                    "LambdaDeploymentBucket": "ecommerce-aws-project-backend"
                  }
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
